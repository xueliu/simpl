/*============================================================
SIMPL Installation Instructions

$Log: INSTALL.simpl,v $
Revision 1.1.1.1  2005/03/27 11:50:30  paul_c
Initial import

Revision 1.4  2002/10/25 18:59:02  root
use new scripts directory

Revision 1.3  2001/01/09 13:23:52  root
fixed version tag

=============================================================*/

This source code is completely self contained. It will not pollute your 
source tree. All it ultimately creates is a static library which you then link 
into your applications as you see fit. It is not necessary to patch your 
existing LINUX code to enable it. 

As such it should be quite independent of the LINUX version you are using.

Step 1: Download the source tar.gz file to your system if you have not already 
        done so (~105k)

Step 2: You will need to define 2 environment variables to enable this stuff 
        (and create the directories that these point to)

        FIFO_PATH - the path to where you wish the fifos to live 
                 eg. export FIFO_PATH=/home/fifo
        SIMPL_HOME - the path to the top of the "simpl" tree where all this 
                  stuff is going to live

        NOTE: the SIMPL_HOME environment variable must terminate at a 
           subdirectory named "simpl"
        eg. export SIMPL_HOME=/home/simpl

        All the source for this project will be confined to this "simpl" 
        directory tree so there is no problem with deinstalling the stuff.

Step 3: To undo the gzip'd tar file simply perform the following steps:

        cd $SIMPL_HOME
        cd .. (yes that's up one level from $SIMPL_HOME)
        <place the simpl.x.x.x.tar.gz here>
        tar -zxvf simpl.x.x.x.tar.gz

        NOTE: Before doing more you may want to read the various bits of 
	   documentation starting with: 

        $SIMPL_HOME/docs/readme.ipc
        That will lead you to all the other readme files.

Step 4: Build the code

	There is a script available to drive the top level Makefile. That 
        script is called:

        $SIMPL_HOME/scripts/buildsimpl

        It will output the results from the make to a file called:

        $SIMPL_HOME/make.out

	The code is organized such that all the individual directories 
        come with their own Makefile. You can execute localized builds 
        by typing:

        make clobber - will remove all .o's and binaries in preparation for 
                       a complete rebuild
        make - will perform a build and leave the executable in the local 
               ../bin directory
        or
        make install - will do everything that "make" does but also copy 
                       the executable to $SIMPL_HOME/bin

Step 5: Run the benchmarking test to see if everything is in order

        Simply follow the instructions contained in the readme at:

        $SIMPL_HOME/benchmarks/src/readme

Step 6: Have fun with the stuff.

        If you have any problems, comments or suggestions for improvement 
        don't hesitate to contact the mailing list.

NOTE:
As with most things it represents a "work in progress". FCsoftware has been 
using the various versions of this code in several projects over the past 
several years ... so when its not undergoing renovations we have found it to be
a very stable library.

